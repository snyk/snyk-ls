{
  "consumer": {
    "name": "SnykLS"
  },
  "provider": {
    "name": "SnykCodeApi"
  },
  "interactions": [
    {
      "description": "Create bundle",
      "providerState": "New bundle",
      "request": {
        "method": "POST",
        "path": "/bundle",
        "headers": {
          "Content-Encoding": "gzip",
          "Content-Type": "application/octet-stream",
          "Session-Token": "fc763eba-0905-41c5-a27f-3934ab26786c",
          "snyk-request-id": "fc763eba-0905-41c5-a27f-3934ab26786c"
        },
        "body": "AA==",
        "matchingRules": {
          "$.headers.Session-Token": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.headers.snyk-request-id": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.body": {
            "match": "type"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "bundleHash": "string",
          "missingFiles": [
            "string"
          ]
        },
        "matchingRules": {
          "$.body.bundleHash": {
            "match": "type"
          },
          "$.body.missingFiles": {
            "min": 1
          },
          "$.body.missingFiles[*].*": {
            "match": "type"
          },
          "$.body.missingFiles[*]": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "Create bundle",
      "providerState": "New bundle and invalid token",
      "request": {
        "method": "POST",
        "path": "/bundle",
        "headers": {
          "Content-Encoding": "gzip",
          "Content-Type": "application/octet-stream",
          "Session-Token": "fc763eba-0905-41c5-a27f-3934ab26786c",
          "snyk-request-id": "fc763eba-0905-41c5-a27f-3934ab26786c"
        },
        "body": "AA==",
        "matchingRules": {
          "$.headers.Session-Token": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.headers.snyk-request-id": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.body": {
            "match": "type"
          }
        }
      },
      "response": {
        "status": 401,
        "headers": {
          "Content-Type": "application/json; charset=utf-8"
        },
        "body": {
          "message": "Invalid auth token provided"
        }
      }
    },
    {
      "description": "Extend bundle",
      "providerState": "Existing bundle",
      "request": {
        "method": "PUT",
        "path": "/bundle/faa6b7161c14f933ef4ca79a18ad9283eab362d5e6d3a977125eb95b37c377d8",
        "headers": {
          "Content-Encoding": "gzip",
          "Content-Type": "application/octet-stream",
          "Session-Token": "fc763eba-0905-41c5-a27f-3934ab26786c",
          "snyk-request-id": "fc763eba-0905-41c5-a27f-3934ab26786c"
        },
        "body": "AA==",
        "matchingRules": {
          "$.path": {
            "match": "regex",
            "regex": "\\/bundle\\/[A-Fa-f0-9]{64}"
          },
          "$.headers.Session-Token": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.headers.snyk-request-id": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.body": {
            "match": "type"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "bundleHash": "string",
          "missingFiles": [
            "string"
          ]
        },
        "matchingRules": {
          "$.body.bundleHash": {
            "match": "type"
          },
          "$.body.missingFiles": {
            "min": 1
          },
          "$.body.missingFiles[*].*": {
            "match": "type"
          },
          "$.body.missingFiles[*]": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "Run analysis",
      "providerState": "Existing bundle",
      "request": {
        "method": "POST",
        "path": "/analysis",
        "headers": {
          "Content-Encoding": "gzip",
          "Content-Type": "application/octet-stream",
          "Session-Token": "fc763eba-0905-41c5-a27f-3934ab26786c",
          "snyk-request-id": "fc763eba-0905-41c5-a27f-3934ab26786c"
        },
        "body": "AA==",
        "matchingRules": {
          "$.headers.Session-Token": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.headers.snyk-request-id": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          },
          "$.body": {
            "match": "type"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "coverage": [
            {
              "files": 1,
              "isSupported": true,
              "lang": "string"
            }
          ],
          "progress": 1.1,
          "sarif": {
            "$schema": "string",
            "runs": [
              {
                "results": [
                  {
                    "codeFlows": [
                      {
                        "threadFlows": [
                          {
                            "locations": [
                              {
                                "location": {
                                  "id": 1,
                                  "physicalLocation": {
                                    "artifactLocation": {
                                      "uri": "string",
                                      "uriBaseId": "string"
                                    },
                                    "region": {
                                      "endColumn": 1,
                                      "endLine": 1,
                                      "startColumn": 1,
                                      "startLine": 1
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "fingerprints": {
                      "0": "string",
                      "1": "string"
                    },
                    "level": "string",
                    "locations": [
                      {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "string",
                            "uriBaseId": "string"
                          },
                          "region": {
                            "endColumn": 1,
                            "endLine": 1,
                            "startColumn": 1,
                            "startLine": 1
                          }
                        }
                      }
                    ],
                    "message": {
                      "arguments": [
                        "string"
                      ],
                      "markdown": "string",
                      "text": "string"
                    },
                    "properties": {
                      "priorityScore": 1,
                      "priorityScoreFactors": [
                        {
                          "label": true,
                          "type": "string"
                        }
                      ]
                    },
                    "ruleId": "string",
                    "ruleIndex": 1
                  }
                ],
                "ruleProperties": {
                  "coverage": [
                    {
                      "files": 1,
                      "isSupported": true,
                      "lang": "string"
                    }
                  ]
                },
                "tool": {
                  "driver": {
                    "name": "string",
                    "rules": [
                      {
                        "categories": [
                          "string"
                        ],
                        "defaultConfiguration": {
                          "level": "string"
                        },
                        "help": {
                          "markdown": "string",
                          "text": "string"
                        },
                        "id": "string",
                        "name": "string",
                        "properties": {
                          "categories": [
                            "string"
                          ],
                          "cwe": [
                            "string"
                          ],
                          "exampleCommitDescriptions": [
                            "string"
                          ],
                          "exampleCommitFixes": [
                            {
                              "commitURL": "string",
                              "lines": [
                                {
                                  "line": "string",
                                  "lineChange": "string",
                                  "lineNumber": 1
                                }
                              ]
                            }
                          ],
                          "help": {
                            "markdown": "string",
                            "text": "string"
                          },
                          "precision": "string",
                          "repoDatasetSize": 1,
                          "shortDescription": {
                            "text": "string"
                          },
                          "tags": [
                            "string"
                          ]
                        },
                        "shortDescription": {
                          "text": "string"
                        }
                      }
                    ],
                    "semanticVersion": "string",
                    "version": "string"
                  }
                }
              }
            ],
            "version": "string"
          },
          "status": "string",
          "timing": {
            "analysis": 1,
            "fetchingCode": 1,
            "queue": 1
          },
          "type": "string"
        },
        "matchingRules": {
          "$.body.coverage": {
            "min": 1
          },
          "$.body.coverage[*].*": {
            "match": "type"
          },
          "$.body.coverage[*].files": {
            "match": "type"
          },
          "$.body.coverage[*].isSupported": {
            "match": "type"
          },
          "$.body.coverage[*].lang": {
            "match": "type"
          },
          "$.body.progress": {
            "match": "type"
          },
          "$.body.sarif.$schema": {
            "match": "type"
          },
          "$.body.sarif.runs": {
            "min": 1
          },
          "$.body.sarif.runs[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results": {
            "min": 1
          },
          "$.body.sarif.runs[*].results[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows": {
            "min": 1
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows": {
            "min": 1
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations": {
            "min": 1
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].location.id": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].location.physicalLocation.artifactLocation.uri": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].location.physicalLocation.artifactLocation.uriBaseId": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].location.physicalLocation.region.endColumn": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].location.physicalLocation.region.endLine": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].location.physicalLocation.region.startColumn": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].codeFlows[*].threadFlows[*].locations[*].location.physicalLocation.region.startLine": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].fingerprints.0": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].fingerprints.1": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].level": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations": {
            "min": 1
          },
          "$.body.sarif.runs[*].results[*].locations[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations[*].id": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations[*].physicalLocation.artifactLocation.uri": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations[*].physicalLocation.artifactLocation.uriBaseId": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations[*].physicalLocation.region.endColumn": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations[*].physicalLocation.region.endLine": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations[*].physicalLocation.region.startColumn": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].locations[*].physicalLocation.region.startLine": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].message.arguments": {
            "min": 1
          },
          "$.body.sarif.runs[*].results[*].message.arguments[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].message.arguments[*]": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].message.markdown": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].message.text": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].properties.priorityScore": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].properties.priorityScoreFactors": {
            "min": 1
          },
          "$.body.sarif.runs[*].results[*].properties.priorityScoreFactors[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].properties.priorityScoreFactors[*].label": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].properties.priorityScoreFactors[*].type": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].ruleId": {
            "match": "type"
          },
          "$.body.sarif.runs[*].results[*].ruleIndex": {
            "match": "type"
          },
          "$.body.sarif.runs[*].ruleProperties.coverage": {
            "min": 1
          },
          "$.body.sarif.runs[*].ruleProperties.coverage[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].ruleProperties.coverage[*].files": {
            "match": "type"
          },
          "$.body.sarif.runs[*].ruleProperties.coverage[*].isSupported": {
            "match": "type"
          },
          "$.body.sarif.runs[*].ruleProperties.coverage[*].lang": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.name": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].categories": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].categories[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].categories[*]": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].defaultConfiguration.level": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].help.markdown": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].help.text": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].id": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].name": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.categories": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.categories[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.categories[*]": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.cwe": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.cwe[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.cwe[*]": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitDescriptions": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitDescriptions[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitDescriptions[*]": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes[*].commitURL": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes[*].lines": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes[*].lines[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes[*].lines[*].line": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes[*].lines[*].lineChange": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.exampleCommitFixes[*].lines[*].lineNumber": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.help.markdown": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.help.text": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.precision": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.repoDatasetSize": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.shortDescription.text": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.tags": {
            "min": 1
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.tags[*].*": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].properties.tags[*]": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.rules[*].shortDescription.text": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.semanticVersion": {
            "match": "type"
          },
          "$.body.sarif.runs[*].tool.driver.version": {
            "match": "type"
          },
          "$.body.sarif.version": {
            "match": "type"
          },
          "$.body.status": {
            "match": "type"
          },
          "$.body.timing.analysis": {
            "match": "type"
          },
          "$.body.timing.fetchingCode": {
            "match": "type"
          },
          "$.body.timing.queue": {
            "match": "type"
          },
          "$.body.type": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "Get filters",
      "request": {
        "method": "GET",
        "path": "/filters",
        "headers": {
          "Content-Type": "application/json",
          "snyk-request-id": "fc763eba-0905-41c5-a27f-3934ab26786c"
        },
        "matchingRules": {
          "$.headers.snyk-request-id": {
            "match": "regex",
            "regex": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "configFiles": [
            "string"
          ],
          "extensions": [
            "string"
          ]
        },
        "matchingRules": {
          "$.body.configFiles": {
            "min": 1
          },
          "$.body.configFiles[*].*": {
            "match": "type"
          },
          "$.body.configFiles[*]": {
            "match": "type"
          },
          "$.body.extensions": {
            "min": 1
          },
          "$.body.extensions[*].*": {
            "match": "type"
          },
          "$.body.extensions[*]": {
            "match": "type"
          }
        }
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "2.0.0"
    }
  }
}