name: Build
on:
  pull_request:

jobs:
  unit-tests:
    name: unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Determine Go version
        run: |
          sed -En 's/^go[[:space:]]+([[:digit:].]+)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@master

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Lint source code
        run: |
          make tools lint

      - name: Run tests
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
        run: |
          make clean test

      - name: Snyk
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
        run: |
          snyk monitor
          snyk code test

  integration-tests:
    name: integration-tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: we should add windows runner
        # FIXME: current bundle calculation is determining too low byte sizes and thus a test is failing on windows.
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2

      - name: Determine Go version
        run: |
          sed -En 's/^go[[:space:]]+([[:digit:].]+)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run integration tests
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
          INTEG_TESTS: 'true'
        run: |
          make clean test

  test-release:
    name: test-release
    needs: [ integration-tests, unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Determine Go version
        run: |
          sed -En 's/^go[[:space:]]+([[:digit:].]+)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Do test release with goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --snapshot --rm-dist --skip-publish

  race-test:
    name: race-test
    needs: [ integration-tests, unit-tests ]
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Determine Go version
        run: |
          sed -En 's/^go[[:space:]]+([[:digit:].]+)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run race tests
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
          INTEG_TESTS: 'true'
        run: |
          make clean race-test
