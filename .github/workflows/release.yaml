# Copyright 2022 Snyk Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Release
on:
  push:
    branches:
      - 'main'

# Grant an OIDC token which we can exchange for an AWS IAM role
permissions:
  id-token: write
  contents: write

jobs:
  release:
    name: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Prepare git
        run: git config --global core.autocrlf false

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # does an unshallow checkout with tags & branches


      # this step can be removed if setup-go will support reading go-version from go.mod
      - name: Determine Go version
        run: |
          sed -En 's/^go[[:space:]]+([[:digit:].]+)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Pact CLI tools
        id: cache-pact
        uses: actions/cache@v3
        with:
          path: ~/pact
          key: ${{ runner.os }}-pact

      - name: Set up Pact CLI tools
        shell: bash
        if: steps.cache-pact.outputs.cache-hit != 'true'
        run: |
          cd ~
          curl -fsSL https://raw.githubusercontent.com/pact-foundation/pact-ruby-standalone/master/install.sh | bash

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Lint source code
        run: |
          make tools lint

      - name: Set up Snyk CLI # Tests need it
        uses: snyk/actions/setup@master

      - name: Run tests
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
        run: |
          export PATH=$PATH:~/pact/bin

          # this is required to be able to test the clipboard
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          sudo apt-get install -y xsel xclip wl-clipboard

          make clean test

      - name: Run integration and smoke tests
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
          INTEG_TESTS: 'true'
          SMOKE_TESTS: 'true'
        run: |
          export PATH=$PATH:~/pact/bin

          # this is required to be able to test the clipboard
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          sudo apt-get install -y xsel xclip wl-clipboard

          make clean test


      - name: Set up Git actions user
        uses: fregante/setup-git-user@v1

      - name: Login to AWS
        run: |
          .github/setup_aws_credentials.py \
            --role-arn "arn:aws:iam::198361731867:role/Snyk-Assets-WriteOnly" \
            --region "${{ secrets.AWS_REGION }}" \

      - name: Create release tag
        run: |
          git tag "v$(git show -s --format=%cd --date=format:%Y%m%d.%H%M%S)"
          git push --tags

      - name: Release binaries with GoReleaser
        uses: goreleaser/goreleaser-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        with:
          args: release --rm-dist
