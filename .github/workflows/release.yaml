name: Release
on:
  push:
    branches:
      - 'main'

jobs:
  release:
    name: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # does an unshallow checkout with tags & branches

      # this step can be removed if setup-go will support reading go-version from go.mod
      - name: Determine Go version
        run: |
          sed -En 's/^go[[:space:]]+([[:digit:].]+)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Lint source code
        run: |
          make tools lint

      - name: Set up Snyk CLI # Tests need it
        uses: snyk/actions/setup@master

      - name: Run tests
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
        run: |
          make clean test

      - name: Run integration tests
        env:
          DEEPROXY_API_URL: ${{secrets.DEEPROXY_API_URL}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN }}
          INTEG_TESTS: 'true'
        run: |
          make clean test

      - name: Set up Git actions user
        uses: fregante/setup-git-user@v1

      - name: Create release tag
        run: |
          git tag "v$(git show -s --format=%cd --date=format:%Y%m%d.%H%M%S)"
          git push --tags

      - name: Release binaries with GoReleaser
        uses: goreleaser/goreleaser-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
        with:
          args: release --rm-dist
